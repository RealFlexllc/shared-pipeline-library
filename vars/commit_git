// List Integrations as Active Choice Parameter
import groovy.json.JsonSlurper
    def IDCS_TOKEN_URL="https://idcs-01c1e32924fc42c6af9b79b9e3de57f3.identity.oraclecloud.com/oauth2/v1/token"
    def HEADER_BASIC_AUTH="Authorization: Basic NjA1Y2UxNzgyZjZhNDQ3Mzk1ZWVmMmI4ZTBlN2I3MmE6MDU0MzM4NjgtOGRkMi00MzY4LTkzYmItZDcwZjkxNjFiZjE1"
    def HEADER_CONTENT_TYPE="Content-Type: application/x-www-form-urlencoded"
    def DATA_SCOPE="scope=https://D89D8E604A8E4862B5FE678A9D4C5083.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all"
    def DATA_GRANT_TYPE="grant_type=client_credentials"
    def cmd = [ 'bash', '-c', "curl --location --request POST ${IDCS_TOKEN_URL} --header '$HEADER_BASIC_AUTH' --header '$HEADER_CONTENT_TYPE' --data-urlencode $DATA_SCOPE --data-urlencode $DATA_GRANT_TYPE".toString()]
    def result= cmd.execute().text
    def jsonSlurper= new JsonSlurper()
    def tokenObject=jsonSlurper.parseText(result)
    def access_token=tokenObject.access_token
	
    def OIC_DEV_URL="https://polydev-axjykgitrxav-sj.integration.ocp.oraclecloud.com/ic/api/integration"
    def INTGR_URL=OIC_DEV_URL+"/v1/integrations"
    def AUTH_TOKEN="Authorization: Bearer "+access_token
    cmd = [ 'bash', '-c',"curl --location --request GET '${INTGR_URL}' --header '${AUTH_TOKEN}'".toString()]
    result=cmd.execute().text
    def inputFile = new File("/var/jenkins_home/jobs/Test/builds/Integrations.json")
    inputFile.write(result)
    def intgrsObj=new JsonSlurper().parseText(result)
    def intgrs= intgrsObj.items.collect{ ele -> ele.id.toString() }
    return intgrs.sort()
	
	// Pipeline functionality
  
  import groovy.json.JsonSlurper

def getToken(String env){
    final IDCS_TOKEN_URL="https://idcs-01c1e32924fc42c6af9b79b9e3de57f3.identity.oraclecloud.com/oauth2/v1/token"
    final HEADER_BASIC_AUTH="Authorization: Basic NjA1Y2UxNzgyZjZhNDQ3Mzk1ZWVmMmI4ZTBlN2I3MmE6MDU0MzM4NjgtOGRkMi00MzY4LTkzYmItZDcwZjkxNjFiZjE1"
    final HEADER_CONTENT_TYPE="Content-Type: application/x-www-form-urlencoded"
    def DATA_SCOPE=""
    if(env.equals("DEV"))
    DATA_SCOPE="scope=https://D89D8E604A8E4862B5FE678A9D4C5083.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all"
    if(env.equals("QA"))
    DATA_SCOPE="scope=https://85A93FF920054A94B413F0AE1562C065.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all"
    final DATA_GRANT_TYPE="grant_type=client_credentials"
    def cmd = [ 'bash', '-c', "curl --location --request POST ${IDCS_TOKEN_URL} --header '$HEADER_BASIC_AUTH' --header '$HEADER_CONTENT_TYPE' --data-urlencode $DATA_SCOPE --data-urlencode $DATA_GRANT_TYPE".toString()]
    def result= cmd.execute().text
    def jsonSlurper= new JsonSlurper()
    def tokenObject=jsonSlurper.parseText(result)
    return tokenObject.access_token
}


def exportIntegration(String intgrId, String token){
    final OIC_DEV_URL="https://polydev-axjykgitrxav-sj.integration.ocp.oraclecloud.com/ic/api/integration"
    def archiveFile=intgrId.replace("%7C","_");
    final DEV_INTGR_URL=OIC_DEV_URL+"/v1/integrations/"+intgrId+"/archive"
    def AUTH_TOKEN="Authorization: Bearer "+token
    def DEV_EXPORT_URL="curl -v --location --request GET '"+DEV_INTGR_URL+"' -H '"+AUTH_TOKEN+"' -o /var/jenkins_home/jobs/Test/builds/integrations/"+archiveFile+".iar";
    def cmd = [ 'bash', '-c', DEV_EXPORT_URL]
    def result=cmd.execute().text
    println("Export Integration URL Result is :"+result)
}

pipeline
{
    
    agent any
    environment {

        BUILD_TRIGGER_BY = "${currentBuild.getBuildCauses()[0].userId}"

    }
    
    stages {
        
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        
        stage('version control')
        {

            steps{
                script {

                        def intgrArr = Integrations.split(",");
                        int i =0;
                        def dev_token=getToken("DEV")
                        while (i<intgrArr.length){
                            String intgrId=intgrArr[i].replace("|","%7C");
                            println("integration is:"+intgrId)
                            exportIntegration(intgrId,dev_token) 
                            i++;
                        }         
                    
                    
                    echo "BUILD_TRIGGER_BY: ${BUILD_TRIGGER_BY}"
                    withCredentials([usernamePassword(credentialsId: 'gitlab_git', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh '''
                          git config --global user.name "${BUILD_TRIGGER_BY}"
                          git config --global user.email "${BUILD_TRIGGER_BY}@poly.com"
                          git clone --branch develop https://${GIT_USERNAME}:${GIT_PASSWORD}@onecode.polycom-labs.com/soa/oicmigration.git
                          cd oicmigration
                          cp /var/jenkins_home/jobs/Test/builds/integrations/*.iar .
                          git add .
                          git commit -m "${CHANGE_REASON}"
                          git push https://${GIT_USERNAME}:${GIT_PASSWORD}@onecode.polycom-labs.com/soa/oicmigration.git develop
                        '''
                        }
                        
                         }
                    
                    
                }
            
        }
        
        stage('clean up')
		{
			steps {
				sh("rm -f /var/jenkins_home/jobs/Test/builds/integrations/*.*")
			
			}
		
		}
    }

}
