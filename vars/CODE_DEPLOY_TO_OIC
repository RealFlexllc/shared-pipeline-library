import groovy.json.JsonSlurper
    def IDCS_TOKEN_URL="https://idcs-01c1e32924fc42c6af9b79b9e3de57f3.identity.oraclecloud.com/oauth2/v1/token"
    def HEADER_BASIC_AUTH="Authorization: Basic NjA1Y2UxNzgyZjZhNDQ3Mzk1ZWVmMmI4ZTBlN2I3MmE6MDU0MzM4NjgtOGRkMi00MzY4LTkzYmItZDcwZjkxNjFiZjE1"
    def HEADER_CONTENT_TYPE="Content-Type: application/x-www-form-urlencoded"
    def DATA_SCOPE="scope=https://D89D8E604A8E4862B5FE678A9D4C5083.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all"
    def DATA_GRANT_TYPE="grant_type=client_credentials"
    def cmd = [ 'bash', '-c', "curl --location --request POST ${IDCS_TOKEN_URL} --header '$HEADER_BASIC_AUTH' --header '$HEADER_CONTENT_TYPE' --data-urlencode $DATA_SCOPE --data-urlencode $DATA_GRANT_TYPE".toString()]
    def result= cmd.execute().text
    def jsonSlurper= new JsonSlurper()
    def tokenObject=jsonSlurper.parseText(result)
	def access_token=tokenObject.access_token
	
	def OIC_DEV_URL="https://polydev-axjykgitrxav-sj.integration.ocp.oraclecloud.com/ic/api/integration"
	def INTGR_URL=OIC_DEV_URL+"/v1/integrations"
       def AUTH_TOKEN="Authorization: Bearer "+access_token
      cmd = [ 'bash', '-c',"curl --location --request GET '${INTGR_URL}' --header '${AUTH_TOKEN}'".toString()]
      result=cmd.execute().text
def inputFile = new File("/var/jenkins_home/jobs/Test/builds/Integrations.json")
inputFile.write(result)
      def intgrsObj=new JsonSlurper().parseText(result)
      def intgrs= intgrsObj.items.collect{ ele -> ele.id.toString() }
      return intgrs.sort()
	
	
  
  
  import groovy.json.JsonSlurper

def getToken(String env){
    final IDCS_TOKEN_URL="https://idcs-01c1e32924fc42c6af9b79b9e3de57f3.identity.oraclecloud.com/oauth2/v1/token"
    final HEADER_BASIC_AUTH="Authorization: Basic NjA1Y2UxNzgyZjZhNDQ3Mzk1ZWVmMmI4ZTBlN2I3MmE6MDU0MzM4NjgtOGRkMi00MzY4LTkzYmItZDcwZjkxNjFiZjE1"
    final HEADER_CONTENT_TYPE="Content-Type: application/x-www-form-urlencoded"
    def DATA_SCOPE=""
    if(env.equals("DEV"))
    DATA_SCOPE="scope=https://D89D8E604A8E4862B5FE678A9D4C5083.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all"
    if(env.equals("QA"))
    DATA_SCOPE="scope=https://85A93FF920054A94B413F0AE1562C065.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all"
    final DATA_GRANT_TYPE="grant_type=client_credentials"
    def cmd = [ 'bash', '-c', "curl --location --request POST ${IDCS_TOKEN_URL} --header '$HEADER_BASIC_AUTH' --header '$HEADER_CONTENT_TYPE' --data-urlencode $DATA_SCOPE --data-urlencode $DATA_GRANT_TYPE".toString()]
    def result= cmd.execute().text
    def jsonSlurper= new JsonSlurper()
    def tokenObject=jsonSlurper.parseText(result)
    return tokenObject.access_token
}

def importIntegration(String intgrId, String token,String path){
    final OIC_QA_URL="https://polytest-axjykgitrxav-sj.integration.ocp.oraclecloud.com/ic/api/integration"
    def archiveFile=path+"/"+intgrId.replace("%7C","_")+".iar";
    println("iar file is"+archiveFile);
    final QA_INTGR_URL=OIC_QA_URL+"/v1/integrations/archive"
    def AUTH_TOKEN="Authorization: Bearer "+token
	def QA_IMPORT_URL="curl -v -X POST -H '"+AUTH_TOKEN+"' -H 'Accept:application/json' -F file=@"+archiveFile+" -F type=application/octet-stream "+QA_INTGR_URL
    println("Import url is:"+QA_IMPORT_URL);
    def cmd = [ 'bash', '-c', QA_IMPORT_URL]
    def result=cmd.execute().text
    println("Import URL Result is :"+result)
}

def activateIntgr(String intgrId, String token){
    
    def OIC_QA_URL="https://polytest-axjykgitrxav-sj.integration.ocp.oraclecloud.com/ic/api/integration"
    def QA_INTGR_URL=OIC_QA_URL+"/v1/integrations/"+intgrId
    def AUTH_TOKEN="Authorization: Bearer "+token
    def data="{\"status\":\"ACTIVATED\"} "
	def QA_IMPORT_URL="curl -v -X POST -H '"+AUTH_TOKEN+"' -H 'Accept:application/json' -H 'X-HTTP-Method-Override:PATCH' -d "+data+QA_INTGR_URL
    println("Activate Export url is:"+QA_IMPORT_URL);
    def cmd = [ 'bash', '-c', QA_IMPORT_URL]
    def result=cmd.execute().text
    
}

pipeline
{
    
    agent any
    
    stages {
        
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        
        stage('version control')
        {
         
            steps{
                script {
         
                    def target_env=ENVIRONMENT
                    //echo "Environment is $target_env"
                    sh "mkdir $target_env"
                    dir(target_env){
                    withCredentials([usernamePassword(credentialsId: 'gitlab_git', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh '''
                          git clone --branch develop https://${GIT_USERNAME}:${GIT_PASSWORD}@onecode.polycom-labs.com/soa/oicmigration.git
                          cd oicmigration && mv *.iar ../ && cd ..
                          rm -rf oicmigration
                        '''
                    }
                    }
                    def intgrArr = Integrations.split(",");
                    int i =0;
                    //def dev_token=getToken("DEV")
                    def qa_token=getToken("QA")
                    def path="${WORKSPACE}/${target_env}"
                    echo "$path"
                    
                    
                    while (i<intgrArr.length){
                    String intgrId=intgrArr[i].replace("|","%7C");
                    println("integration is:"+intgrId)
                    
                    importIntegration(intgrId,qa_token,path)
                    
                    i++;
                    
                    }         
            }
                    
                    
                }
            
        }
        
    }

}
